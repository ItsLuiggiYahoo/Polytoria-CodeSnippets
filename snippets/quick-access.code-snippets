{
    "Game": {
		"scope": "lua",
		"prefix": ["game"],
		"body": ["game"],
		"description": "Get game."
	},
	"Environment": {
		"scope": "lua",
		"prefix": ["Environment"],
		"body": ["game['Environment']"],
		"description": "Get Environment."
	},
    "Players": {
		"scope": "lua",
		"prefix": ["Players"],
		"body": ["game['Players']"],
		"description": "Get Players Service."
	},
	"LocalPlayer": {
		"scope": "lua",
		"prefix": ["LocalPlayer"],
		"body": ["game['Players'].LocalPlayer"],
		"description": "Get LocalPlayer."
	},
	"Hidden": {
		"scope": "lua",
		"prefix": ["Hidden"],
		"body": ["game[\"Hidden\"]"],
		"description": "Get Hidden."
	},
	"ScriptService": {
		"scope": "lua",
		"prefix": ["ScriptService"],
		"body": ["game[\"ScriptService\"]"],
		"description": "Get ScriptService."
	},
    "Instance.new": {
		"scope": "lua",
		"prefix": ["Instance.New"],
		"body": ["Instance.New('$1')"],
		"description": "Create new Instance."
	},
    "Rendered": {
		"scope": "lua",
		"prefix": ["Rendered"],
		"body": [
			"game.Rendered:Connect(${2:function(deltaTime)",
			"\t",
			"end})"
		],
		"description": "On Game rendered."
	},
	".LookAt": {
		"scope": "lua",
		"prefix": [".LookAt"],
		"body": [
			".LookAt($1)"
		],
		"description": "Rotates the DynamicInstance so that the forward vector looks at the target."
	},
    ".Translate": {
		"scope": "lua",
		"prefix": [".Translate"],
		"body": [
			".Translate($1)"
		],
		"description": "Moves the transform in the direction and distance of translation."
	},
    ".Forward": {
		"scope": "lua",
		"prefix": [".Forward"],
		"body": [
			".Forward"
		],
		"description": "The forward vector of this DynamicInstance"
	},
    ".Up": {
		"scope": "lua",
		"prefix": [".Up"],
		"body": [
			".Up"
		],
		"description": "The up vector of this DynamicInstance"
	},
    ".Right": {
		"scope": "lua",
		"prefix": [".Right"],
		"body": [
			".Right"
		],
		"description": "The right vector of this DynamicInstance"
	},
    ".LocalPosition": {
		"scope": "lua",
		"prefix": [".LocalPosition"],
		"body": [
			".LocalPosition"
		],
		"description": "Specifies the position relative to the parent of an instance."
	},
    ".LocalRotation": {
		"scope": "lua",
		"prefix": [".LocalRotation"],
		"body": [
			".LocalRotation"
		],
		"description": "Specifies the rotation relative to the parent of an instance."
	},
    ".LocalSize": {
		"scope": "lua",
		"prefix": [".LocalSize"],
		"body": [
			".LocalSize"
		],
		"description": "Specifies the size relative to the parent of an instance."
	},
    ".Position": {
		"scope": "lua",
		"prefix": [".Position"],
		"body": [
			".Position"
		],
		"description": "Specifies the position of an instance."
	},
    ".Rotation": {
		"scope": "lua",
		"prefix": [".Rotation"],
		"body": [
			".Rotation"
		],
		"description": "Specifies the rotation of an instance."
	},
    ".Size": {
		"scope": "lua",
		"prefix": [".Size"],
		"body": [
			".Size"
		],
		"description": "Specifies the size of an instance."
	},
	".Gravity": {
		"scope": "lua",
		"prefix": [".Gravity"],
		"body": [
			"game['Environment'].Gravity"
		],
		"description": "Determines the constant force to apply to all physics-based objects in the world."
	},
	".Skybox": {
		"scope": "lua",
		"prefix": [".Skybox"],
		"body": [
			"game['Environment'].Skybox"
		],
		"description": "Specifies which skybox to use in the game."
	},
    ".GameID": {
		"scope": "lua",
		"prefix": [".GameID"],
		"body": [
			"game.GameID"
		],
		"description": "The ID of the current game. Return 0 if local test."
	},
    ".InstanceCount": {
		"scope": "lua",
		"prefix": ["game.InstanceCount"],
		"body": [
			".InstanceCount"
		],
		"description": "The amount of instances currently loaded on the server."
	},
    ".LocalInstanceCount": {
		"scope": "lua",
		"prefix": [".LocalInstanceCount"],
		"body": [
			"game.LocalInstanceCount"
		],
		"description": "The amount of instances currently loaded on the client."
	},
    ".PlayersConnected": {
		"scope": "lua",
		"prefix": [".PlayersConnected"],
		"body": [
			"game.PlayersConnected"
		],
		"description": "The amount of players on the server."
	},
	"Vector3.New": {
		"scope": "lua",
		"prefix": ["Vector3.New"],
		"body": [
			"Vector3.New(${1:0}, ${2:0}, ${3:0})"
		],
		"description": "Construct new Vector3."
	},
	"Vector2.New": {
		"scope": "lua",
		"prefix": ["Vector2.New"],
		"body": [
			"Vector2.New(${1:0}, ${2:0})"
		],
		"description": "Construct new Vector2."
	},
	"CreateExplosion": {
		"scope": "lua",
		"prefix": ["CreateExplosion"],
		"body": [
			"game['Environment']:CreateExplosion(${1:Vector3.New(0,0,0)}, ${2:30}, ${3:1000}, ${4:false})"
		],
		"description": "Create Explosion."
	},
	"Raycast": {
		"scope": "lua",
		"prefix": [":Raycast"],
		"body": [
			"game['Environment']:Raycast(${1:origin}, ${2:direction}${3:, max_distance})"
		],
		"description": "Casts a ray from origin with a specified direction and returns a RayResult for the first hit object."
	},
	"RaycastAll": {
		"scope": "lua",
		"prefix": [":RaycastAll"],
		"body": [
			"game['Environment']:RaycastAll(${1:origin}, ${2:direction}${3:, max_distance})"
		],
		"description": "Casts a ray from origin with a specified direction and returns a RayResult for the first hit object."
	},
}